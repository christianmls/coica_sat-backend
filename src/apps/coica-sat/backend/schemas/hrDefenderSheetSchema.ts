import Joi from 'joi';


/*
  country: string;
  threatType: string;
  genderThreatType: string;
  community: string;
  originTown: string;
  latLocation: string;
  longLocation: string;
  addressLocation: string;
  threatAttackType: Array<string>;
  threatAttackOtherType: string;
  rightsViolatedType: Array<string>;
  rightsViolatedOtherType: string;
  relationShipCOVIDyesNo: string;
  relationShipCOVIDType: Array<string>;
  relationShipCOVIDOtherType: string;
  allegedAuthor: Array<string>;
  allegedAuthorOther: string;
  factsReported: string;
  factsReportedAudio: Array<string>;
  informationSource: Array<string>;
  informationSourceOther: string;
  indicateMeansVerification: string;
  thereWasLegalAction: string;
  thereWasAndAnsweredState: string;
  defenderName: string;
  latUTMCoordinates: string;
  logUTMCoordinates: string;
  elvUTMCoordinates: string;
  descriptionUTMCoordinates: string;
  contactEmail: string;
  contactPhone: string;
  communityBase: string;
  organizationBase: string;
  completedBy: string;
  userById: string;
  dateFill: string;
  countryFormRequest: string;
  requestTypeFormRequest: Array<string>;
  requestOtherTypeFormRequest: string;
  requestAuthorFormRequest: string;
  requestNumberFormRequest: string;
  requestDateFormRequest: string;
  toWhomWasRequestedFormRequest: string;
  requestDescriptionFormRequest: string;
  resumeDescriptionFormRequest: string;
  communityBaseFormRequest: string;
  organizationBaseFormRequest: string;
  completedByFormRequest: string;
  dateFillFormRequest: string;
  status: string;
  processing: string;
  uploaded: string;
  description: string;
  deleteField: string;
  autoDate: string;
  autoDateUpdate: string;
 */

export const HrDefenderSheetSchema = Joi.object().keys({
  id: Joi.string().required(),
  country: Joi.string().required(),
  threatType: Joi.string().required(),
  location: Joi.string().required(),
  originTown: Joi.string().required(),
  threatOtherType: Joi.array().items(Joi.string()).required(),
  rightsViolatedType: Joi.array().items(Joi.string()).required(),
  rightsViolatedOtherType: Joi.any().optional(),
  responseType: Joi.string().required(),
  relationShipCOVIDType: Joi.array().items(Joi.string()).required(),
  relationShipCOVIDOtherType: Joi.any().optional(),
  threatAuthor: Joi.string().required(),
  factsReported: Joi.string().required(),
  informationSource: Joi.array().items(Joi.string()).required(),
  informationSourceOther: Joi.any().optional(),
  indicateMeans: Joi.string().required(),
  thereWasLegalAction: Joi.string().required(),
  thereWasAndAnswered: Joi.string().required(),
  defenderName: Joi.string().required(),
  UTMCoordinates: Joi.string().required(),
  contactDetails: Joi.string().required(),
  communityBase: Joi.string().required(),
  completedBy: Joi.string().required(),
  personName: Joi.string().required(),
  requestCountry: Joi.string().required(),
  requestType: Joi.array().items(Joi.string()).required(),
  requestAuthor: Joi.string().required(),
  requestNumber: Joi.string().required(),
  toWhomWasRequested: Joi.string().required(),
  requestDescription: Joi.string().required(),
  requestShortDescription: Joi.string().required(),
  reportingCommunityBase: Joi.string().required(),
  organizationName: Joi.string().required(),
  organizationPersonName: Joi.string().required(),
  status: Joi.string().optional(),
  processing: Joi.boolean().optional(),
  mobileLatitude: Joi.any().optional(),
  mobileLongitude: Joi.any().optional(),
  mobileAddress: Joi.any().optional(),
  gpsId: Joi.any().optional(),
  xLongitude: Joi.any().optional(),
  yLatitude: Joi.any().optional(),
  zRise: Joi.any().optional(),
  description: Joi.any().optional()
});
